apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.otel.daemonset.name }}
  namespace: {{ .Values.otel.daemonset.namespace }}
spec:
  selector:
    matchLabels:
      app: otel-daemonset
      type: daemonset
  template:
    metadata:
      labels:
        app: otel-daemonset
        type: daemonset
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector-contrib:0.73.0
          imagePullPolicy: {{ .Values.otel.daemonset.pullPolicy }}
          ports:
            - containerPort: {{ .Values.otel.daemonset.service.portGrpc }}
              name: otlp-grpc
            - containerPort: {{ .Values.otel.daemonset.service.portHttp }}
              name: otlp-http
          volumeMounts:
            - name: config-volume
              mountPath: /etc/otel-collector-config
              readOnly: true
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          args: 
            - "--config=/etc/otel-collector-config/otel-collector-config.yaml"
      volumes:
        - name: config-volume 
          configMap:
            name: {{ .Values.otel.daemonset.configMap.name }}
      tolerations:
        - key: "node-role.kubernetes.io/control-plane"
          operator: "Exists"
          effect: "NoSchedule"
